// <auto-generated />
using System;
using AdmissionAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AdmissionAPI.v1._0.Migrations
{
    [DbContext(typeof(AdmissionContext))]
    [Migration("20210920161732_test_1")]
    partial class test_1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AdmissionAPI.Models.UniAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DistrictId")
                        .HasColumnType("int");

                    b.Property<int?>("UniversityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.HasIndex("UniversityId");

                    b.ToTable("UniAddress");
                });

            modelBuilder.Entity("AdmissionAPI.Models.UniStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UniStatus");
                });

            modelBuilder.Entity("AdmissionAPI.Models.University", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("UniversityName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("University");
                });

            modelBuilder.Entity("AdmissionAPI.v1._0.Models.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answer");
                });

            modelBuilder.Entity("AdmissionAPI.v1._0.Models.CounPhone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CounselorUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CounselorUserId");

                    b.ToTable("CounPhone");
                });

            modelBuilder.Entity("AdmissionAPI.v1._0.Models.CounStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CounStatus");
                });

            modelBuilder.Entity("AdmissionAPI.v1._0.Models.CounUniMajor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CounselorUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("UniMajorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CounselorUserId");

                    b.HasIndex("UniMajorId");

                    b.ToTable("CounUniMajor");
                });

            modelBuilder.Entity("AdmissionAPI.v1._0.Models.Counselor", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("CounStatusId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("CounStatusId");

                    b.ToTable("Counselor");
                });

            modelBuilder.Entity("AdmissionAPI.v1._0.Models.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("District");
                });

            modelBuilder.Entity("AdmissionAPI.v1._0.Models.Major", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MajorStatusId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MajorStatusId");

                    b.ToTable("Major");
                });

            modelBuilder.Entity("AdmissionAPI.v1._0.Models.MajorStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MajorStatus");
                });

            modelBuilder.Entity("AdmissionAPI.v1._0.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UniversityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UniversityId");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("AdmissionAPI.v1._0.Models.Slot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StudentUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("TalkshowId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentUserId");

                    b.HasIndex("TalkshowId");

                    b.ToTable("Slot");
                });

            modelBuilder.Entity("AdmissionAPI.v1._0.Models.Student", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StudentStatusId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("StudentStatusId");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("AdmissionAPI.v1._0.Models.StudentPhone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("StudentUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("StudentUserId");

                    b.ToTable("StudentPhone");
                });

            modelBuilder.Entity("AdmissionAPI.v1._0.Models.StudentStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StudentStatus");
                });

            modelBuilder.Entity("AdmissionAPI.v1._0.Models.Talkshow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CounselorUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("TalkshowStatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CounselorUserId");

                    b.HasIndex("TalkshowStatusId");

                    b.ToTable("Talkshow");
                });

            modelBuilder.Entity("AdmissionAPI.v1._0.Models.TalkshowStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TalkshowStatus");
                });

            modelBuilder.Entity("AdmissionAPI.v1._0.Models.TalkshowUniMajor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("TalkshowId")
                        .HasColumnType("int");

                    b.Property<int?>("UniMajorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TalkshowId");

                    b.HasIndex("UniMajorId");

                    b.ToTable("TalkshowUniMajor");
                });

            modelBuilder.Entity("AdmissionAPI.v1._0.Models.UniMajor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MajorId")
                        .HasColumnType("int");

                    b.Property<int?>("UniversityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MajorId");

                    b.HasIndex("UniversityId");

                    b.ToTable("UniMajor");
                });

            modelBuilder.Entity("AdmissionAPI.v1._0.Models.Wallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StudentUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("StudentUserId");

                    b.ToTable("Wallet");
                });

            modelBuilder.Entity("AdmissionAPI.Models.UniAddress", b =>
                {
                    b.HasOne("AdmissionAPI.v1._0.Models.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId");

                    b.HasOne("AdmissionAPI.Models.University", "University")
                        .WithMany()
                        .HasForeignKey("UniversityId");

                    b.Navigation("District");

                    b.Navigation("University");
                });

            modelBuilder.Entity("AdmissionAPI.Models.University", b =>
                {
                    b.HasOne("AdmissionAPI.Models.UniStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("AdmissionAPI.v1._0.Models.Answer", b =>
                {
                    b.HasOne("AdmissionAPI.v1._0.Models.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("AdmissionAPI.v1._0.Models.CounPhone", b =>
                {
                    b.HasOne("AdmissionAPI.v1._0.Models.Counselor", "Counselor")
                        .WithMany()
                        .HasForeignKey("CounselorUserId");

                    b.Navigation("Counselor");
                });

            modelBuilder.Entity("AdmissionAPI.v1._0.Models.CounUniMajor", b =>
                {
                    b.HasOne("AdmissionAPI.v1._0.Models.Counselor", "Counselor")
                        .WithMany()
                        .HasForeignKey("CounselorUserId");

                    b.HasOne("AdmissionAPI.v1._0.Models.UniMajor", "UniMajor")
                        .WithMany()
                        .HasForeignKey("UniMajorId");

                    b.Navigation("Counselor");

                    b.Navigation("UniMajor");
                });

            modelBuilder.Entity("AdmissionAPI.v1._0.Models.Counselor", b =>
                {
                    b.HasOne("AdmissionAPI.v1._0.Models.CounStatus", "CounStatus")
                        .WithMany()
                        .HasForeignKey("CounStatusId");

                    b.Navigation("CounStatus");
                });

            modelBuilder.Entity("AdmissionAPI.v1._0.Models.Major", b =>
                {
                    b.HasOne("AdmissionAPI.v1._0.Models.MajorStatus", "MajorStatus")
                        .WithMany()
                        .HasForeignKey("MajorStatusId");

                    b.Navigation("MajorStatus");
                });

            modelBuilder.Entity("AdmissionAPI.v1._0.Models.Question", b =>
                {
                    b.HasOne("AdmissionAPI.Models.University", "University")
                        .WithMany()
                        .HasForeignKey("UniversityId");

                    b.Navigation("University");
                });

            modelBuilder.Entity("AdmissionAPI.v1._0.Models.Slot", b =>
                {
                    b.HasOne("AdmissionAPI.v1._0.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentUserId");

                    b.HasOne("AdmissionAPI.v1._0.Models.Talkshow", "Talkshow")
                        .WithMany()
                        .HasForeignKey("TalkshowId");

                    b.Navigation("Student");

                    b.Navigation("Talkshow");
                });

            modelBuilder.Entity("AdmissionAPI.v1._0.Models.Student", b =>
                {
                    b.HasOne("AdmissionAPI.v1._0.Models.StudentStatus", "StudentStatus")
                        .WithMany()
                        .HasForeignKey("StudentStatusId");

                    b.Navigation("StudentStatus");
                });

            modelBuilder.Entity("AdmissionAPI.v1._0.Models.StudentPhone", b =>
                {
                    b.HasOne("AdmissionAPI.v1._0.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentUserId");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("AdmissionAPI.v1._0.Models.Talkshow", b =>
                {
                    b.HasOne("AdmissionAPI.v1._0.Models.Counselor", "Counselor")
                        .WithMany()
                        .HasForeignKey("CounselorUserId");

                    b.HasOne("AdmissionAPI.v1._0.Models.TalkshowStatus", "TalkshowStatus")
                        .WithMany()
                        .HasForeignKey("TalkshowStatusId");

                    b.Navigation("Counselor");

                    b.Navigation("TalkshowStatus");
                });

            modelBuilder.Entity("AdmissionAPI.v1._0.Models.TalkshowUniMajor", b =>
                {
                    b.HasOne("AdmissionAPI.v1._0.Models.Talkshow", "Talkshow")
                        .WithMany()
                        .HasForeignKey("TalkshowId");

                    b.HasOne("AdmissionAPI.v1._0.Models.UniMajor", "UniMajor")
                        .WithMany()
                        .HasForeignKey("UniMajorId");

                    b.Navigation("Talkshow");

                    b.Navigation("UniMajor");
                });

            modelBuilder.Entity("AdmissionAPI.v1._0.Models.UniMajor", b =>
                {
                    b.HasOne("AdmissionAPI.v1._0.Models.Major", "Major")
                        .WithMany()
                        .HasForeignKey("MajorId");

                    b.HasOne("AdmissionAPI.Models.University", "University")
                        .WithMany()
                        .HasForeignKey("UniversityId");

                    b.Navigation("Major");

                    b.Navigation("University");
                });

            modelBuilder.Entity("AdmissionAPI.v1._0.Models.Wallet", b =>
                {
                    b.HasOne("AdmissionAPI.v1._0.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentUserId");

                    b.Navigation("Student");
                });
#pragma warning restore 612, 618
        }
    }
}
